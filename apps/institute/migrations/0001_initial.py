# Generated by Django 2.0.4 on 2018-04-10 14:52

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('program', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank for autofill.', unique=True)),
                ('description', models.TextField()),
                ('starts_on', models.DateField(blank=True, null=True)),
                ('ends_on', models.DateField(blank=True, null=True)),
                ('entrance_exam_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank for autofill.', unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_founder', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank for autofill.', unique=True)),
                ('short_name', models.CharField(blank=True, max_length=15, null=True)),
                ('established', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1700), django.core.validators.MaxValueValidator(2050)])),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('logo', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='institutes/')),
                ('address', models.TextField(blank=True, null=True)),
                ('district', models.CharField(blank=True, choices=[('Bhojpur', 'Bhojpur'), ('Dhankuta', 'Dhankuta'), ('Ilam', 'Ilam'), ('Jhapa', 'Jhapa'), ('Khotang', 'Khotang'), ('Morang', 'Morang'), ('Okhaldhunga', 'Okhaldhunga'), ('Panchthar', 'Panchthar'), ('Sankhuwasabha', 'Sankhuwasabha'), ('Solukhumbu', 'Solukhumbu'), ('Sunsari', 'Sunsari'), ('Taplejung', 'Taplejung'), ('Terhathum', 'Terhathum'), ('Udayapur', 'Udayapur'), ('Saptari', 'Saptari'), ('Siraha', 'Siraha'), ('Dhanusha', 'Dhanusha'), ('Mahottari', 'Mahottari'), ('Sarlahi', 'Sarlahi'), ('Rautahat', 'Rautahat'), ('Bara', 'Bara'), ('Parsa', 'Parsa'), ('Dolakha', 'Dolakha'), ('Ramechhap', 'Ramechhap'), ('Sindhuli', 'Sindhuli'), ('Kavrepalanchok', 'Kavrepalanchok'), ('Sindhupalchok', 'Sindhupalchok'), ('Rasuwa', 'Rasuwa'), ('Nuwakot', 'Nuwakot'), ('Dhading', 'Dhading'), ('Chitwan', 'Chitwan'), ('Makwanpur', 'Makwanpur'), ('Bhaktapur', 'Bhaktapur'), ('Lalitpur', 'Lalitpur'), ('Kathmandu', 'Kathmandu'), ('Baglung', 'Baglung'), ('Gorkha', 'Gorkha'), ('Kaski', 'Kaski'), ('Lamjung', 'Lamjung'), ('Manang', 'Manang'), ('Mustang', 'Mustang'), ('Myagdi', 'Myagdi'), ('Nawalpur', 'Nawalpur'), ('Parbat', 'Parbat'), ('Syangja', 'Syangja'), ('Tanahun', 'Tanahun'), ('Arghakhanchi', 'Arghakhanchi'), ('Banke', 'Banke'), ('Bardiya', 'Bardiya'), ('Dang', 'Dang'), ('Eastern Rukum', 'Eastern Rukum'), ('Gulmi', 'Gulmi'), ('Kapilvastu', 'Kapilvastu'), ('Parasi', 'Parasi'), ('Palpa', 'Palpa'), ('Pyuthan', 'Pyuthan'), ('Rolpa', 'Rolpa'), ('Rupandehi', 'Rupandehi'), ('Dailekh', 'Dailekh'), ('Dolpa', 'Dolpa'), ('Humla', 'Humla'), ('Jajarkot', 'Jajarkot'), ('Jumla', 'Jumla'), ('Kalikot', 'Kalikot'), ('Mugu', 'Mugu'), ('Salyan', 'Salyan'), ('Surkhet', 'Surkhet'), ('Western Rukum', 'Western Rukum'), ('Achham', 'Achham'), ('Baitadi', 'Baitadi'), ('Bajhang', 'Bajhang'), ('Bajura', 'Bajura'), ('Dadeldhura', 'Dadeldhura'), ('Darchula', 'Darchula'), ('Doti', 'Doti'), ('Kailali', 'Kailali'), ('Kanchanpur', 'Kanchanpur')], max_length=50, null=True)),
                ('phone', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, null=True, size=None)),
                ('email', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(blank=True, max_length=254, null=True), blank=True, null=True, size=None)),
                ('website', models.URLField(blank=True, null=True)),
                ('description', models.TextField()),
                ('salient_features', models.TextField(blank=True, null=True)),
                ('admission_guidelines', models.TextField(blank=True, null=True)),
                ('scholarship_information', models.TextField(blank=True, null=True)),
                ('ugc_accredition', models.BooleanField(default=False, verbose_name='UGC Accredition')),
                ('published', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('has_building', models.BooleanField(default=False, verbose_name='Does the college own its building?')),
                ('no_of_buildings', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('no_of_rooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('has_land', models.BooleanField(default=False, verbose_name='Does the college own its land?')),
                ('land', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Land area in sq. ft.')),
                ('total_staffs', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('class_capacity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Max students per class')),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('video_link', models.URLField(blank=True, null=True)),
                ('boards', models.ManyToManyField(blank=True, to='program.Board')),
                ('network_institutes', models.ManyToManyField(blank=True, related_name='_institute_network_institutes_+', to='institute.Institute')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstituteAward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1700), django.core.validators.MaxValueValidator(2050)])),
                ('description', models.TextField(blank=True, null=True)),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Award')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', versatileimagefield.fields.VersatileImageField(upload_to='institute_documents/')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', versatileimagefield.fields.VersatileImageField(upload_to='institute_images/')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='InstitutePersonnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True)),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Designation')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='InstituteProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1700), django.core.validators.MaxValueValidator(2050)])),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('seats', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('time_slot', models.CharField(blank=True, max_length=255, null=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='program.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('plan', models.CharField(choices=[('Premium', 'Premium')], max_length=20)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('name', models.CharField(max_length=255)),
                ('photo', versatileimagefield.fields.VersatileImageField(upload_to='personnels/')),
            ],
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute')),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank for autofill.', unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank for autofill.', unique=True)),
                ('starts_on', models.DateField(blank=True, null=True)),
                ('ends_on', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScholarshipCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.AddField(
            model_name='scholarship',
            name='categories',
            field=models.ManyToManyField(to='institute.ScholarshipCategory'),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='institutes',
            field=models.ManyToManyField(blank=True, to='institute.Institute'),
        ),
        migrations.AddField(
            model_name='rank',
            name='rank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Ranking'),
        ),
        migrations.AddField(
            model_name='institutepersonnel',
            name='personnel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Personnel'),
        ),
        migrations.AddField(
            model_name='feature',
            name='institute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institute.Institute'),
        ),
        migrations.AddField(
            model_name='admission',
            name='institutes',
            field=models.ManyToManyField(blank=True, related_name='admissions', to='institute.Institute'),
        ),
        migrations.AddField(
            model_name='admission',
            name='programs',
            field=models.ManyToManyField(blank=True, related_name='admissions', to='program.Program'),
        ),
    ]
